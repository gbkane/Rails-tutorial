{"filter":false,"title":"test_helper.rb","tooltip":"/test/test_helper.rb","undoManager":{"stack":[[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":2},"action":"insert","lines":["  "],"id":3}],[{"start":{"row":8,"column":2},"end":{"row":11,"column":5},"action":"insert","lines":["# Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end"],"id":4}],[{"start":{"row":11,"column":5},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":12,"column":0},"end":{"row":12,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":4,"column":0},"end":{"row":14,"column":3},"action":"remove","lines":["class ActiveSupport::TestCase","  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.","  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","  ","  # Add more helper methods to be used by all tests here...","end"],"id":6},{"start":{"row":4,"column":0},"end":{"row":31,"column":3},"action":"insert","lines":["class ActiveSupport::TestCase","  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end","end"]}],[{"start":{"row":5,"column":2},"end":{"row":30,"column":7},"action":"remove","lines":["fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"],"id":7,"ignore":true},{"start":{"row":5,"column":2},"end":{"row":8,"column":59},"action":"insert","lines":["# Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.","  fixtures :all","","  # Add more helper methods to be used by all tests here..."]}],[{"start":{"row":5,"column":2},"end":{"row":5,"column":17},"action":"remove","lines":["# Setup all fix"],"id":8,"ignore":true},{"start":{"row":5,"column":2},"end":{"row":7,"column":6},"action":"insert","lines":["fixtures :all","","  # Re"]},{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"remove","lines":["e"]},{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"insert","lines":["n"]},{"start":{"row":7,"column":12},"end":{"row":10,"column":17},"action":"remove","lines":["in test/fixtures/*.yml for all tests in alphabetical order.","  fixtures :all","","  # Add more help"]},{"start":{"row":7,"column":12},"end":{"row":19,"column":53},"action":"insert","lines":["true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: rememb"]},{"start":{"row":19,"column":55},"end":{"row":19,"column":56},"action":"remove","lines":[" "]},{"start":{"row":19,"column":55},"end":{"row":19,"column":56},"action":"insert","lines":["_"]},{"start":{"row":19,"column":58},"end":{"row":19,"column":95},"action":"remove","lines":["thods to be used by all tests here..."]},{"start":{"row":19,"column":58},"end":{"row":30,"column":7},"action":"insert","lines":[" }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]}]],"mark":6,"position":6},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":31,"column":3},"end":{"row":31,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1432088580260,"hash":"85beeabed51417f38b4d9b29cb3da8db6fd43712"}