{"filter":false,"title":"following_test.rb","tooltip":"/test/integration/following_test.rb","undoManager":{"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["require 'test_helper'","","class FollowingTest < ActionDispatch::IntegrationTest","  # test \"the truth\" do","  #   assert true","  # end","end",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":26,"column":3},"action":"insert","lines":["require 'test_helper'","","class FollowingTest < ActionDispatch::IntegrationTest","","  def setup","    @user = users(:michael)","    log_in_as(@user)","  end","","  test \"following page\" do","    get following_user_path(@user)","    assert_not @user.following.empty?","    assert_match @user.following.count.to_s, response.body","    @user.following.each do |user|","      assert_select \"a[href=?]\", user_path(user)","    end","  end","","  test \"followers page\" do","    get followers_user_path(@user)","    assert_not @user.followers.empty?","    assert_match @user.followers.count.to_s, response.body","    @user.followers.each do |user|","      assert_select \"a[href=?]\", user_path(user)","    end","  end","end"]}],[{"start":{"row":5,"column":19},"end":{"row":5,"column":26},"action":"remove","lines":["michael"],"id":3},{"start":{"row":5,"column":19},"end":{"row":5,"column":20},"action":"insert","lines":["g"]}],[{"start":{"row":5,"column":20},"end":{"row":5,"column":21},"action":"insert","lines":["r"],"id":4}],[{"start":{"row":5,"column":21},"end":{"row":5,"column":22},"action":"insert","lines":["e"],"id":5}],[{"start":{"row":5,"column":22},"end":{"row":5,"column":23},"action":"insert","lines":["g"],"id":6}],[{"start":{"row":5,"column":24},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":6,"column":0},"end":{"row":6,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":6,"column":4},"end":{"row":6,"column":27},"action":"insert","lines":["@other = users(:archer)"],"id":8}],[{"start":{"row":26,"column":5},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":27,"column":2},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":28,"column":2},"end":{"row":54,"column":5},"action":"insert","lines":["test \"should follow a user the standard way\" do","    assert_difference '@user.following.count', 1 do","      post relationships_path, followed_id: @other.id","    end","  end","","  test \"should follow a user with Ajax\" do","    assert_difference '@user.following.count', 1 do","      xhr :post, relationships_path, followed_id: @other.id","    end","  end","","  test \"should unfollow a user the standard way\" do","    @user.follow(@other)","    relationship = @user.active_relationships.find_by(followed_id: @other.id)","    assert_difference '@user.following.count', -1 do","      delete relationship_path(relationship)","    end","  end","","  test \"should unfollow a user with Ajax\" do","    @user.follow(@other)","    relationship = @user.active_relationships.find_by(followed_id: @other.id)","    assert_difference '@user.following.count', -1 do","      xhr :delete, relationship_path(relationship)","    end","  end"],"id":11}]],"mark":9,"position":9},"ace":{"folds":[],"scrolltop":224,"scrollleft":0,"selection":{"start":{"row":54,"column":5},"end":{"row":54,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":15,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1432307881593,"hash":"1ee6503040ab33870416dd421c3649835658901d"}